/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.req.view;

import br.com.req.dao.FuncionarioDao;
import br.com.req.dao.ReqDAO;
import br.com.req.jdbc.ConnectionFactory;
import br.com.req.model.Funcionario;
import br.com.req.model.Item;
import br.com.req.model.Requisicao;
import br.com.req.model.RequisicaoItem;
import br.com.req.model.Utilitarios;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import static java.lang.System.exit;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Suporte
 */
public class ReqCompras extends javax.swing.JFrame {

    public String Fsolicitante;
    public String Fnome;
    public String gg;
    public static ReqCompras x;
    static List<RequisicaoItem> listaSdb = new ArrayList<>();
    static int count;
    DefaultTableModel dados;
    LocalDate dataDeInscricao = LocalDate.now();
    ListIterator<Requisicao> req2;
    ListIterator<Requisicao> req1;
    ListIterator<Requisicao> req3;
    public static boolean certo = true;

    public void limparBuscaItens() {

        Item.setText(null);
        DescInformada.setText(null);
        Quantidade.setText(null);
        ValorUnitario.setText(null);
        ValorTotal.setText(null);
        Unidade.setText(null);
        Complemento.setText(null);
        CodigoExterno.setText(null);

    }

    /**
     * Creates new form ReqCompras
     */
    public ReqCompras() {
        
        initComponents();
        centroDoCusto.setEnabled(false);
        Ccbtn.setEnabled(false);
       this.req1 = new ReqDAO().anteriorReq(1);
       this.req2 = new ReqDAO().anteriorReq(2);
       this.req3 = new ReqDAO().anteriorReq(1);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Telareq = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        situacao = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nomeEstab = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnAutorizador = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        Ccbtn = new javax.swing.JButton();
        lblAutoriazador = new javax.swing.JLabel();
        btnFornecedor = new javax.swing.JButton();
        lblItem = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        responsavelCompra = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        finalidade = new javax.swing.JTextArea();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jLabel19 = new javax.swing.JLabel();
        btnItem = new javax.swing.JButton();
        Item = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        DescInformada = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        Quantidade = new javax.swing.JFormattedTextField();
        jLabel22 = new javax.swing.JLabel();
        Unidade = new javax.swing.JFormattedTextField();
        jLabel23 = new javax.swing.JLabel();
        ValorUnitario = new javax.swing.JFormattedTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        CodigoExterno = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Complemento = new javax.swing.JTextArea();
        jLabel26 = new javax.swing.JLabel();
        estab = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnPesquisaReq = new javax.swing.JButton();
        Lblsolicitante = new javax.swing.JLabel();
        Solicitante = new javax.swing.JButton();
        lblFornecedor = new javax.swing.JLabel();
        Status = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TabelaItens = new javax.swing.JTable();
        ValorTotal = new javax.swing.JFormattedTextField();
        solicitanteTxt = new javax.swing.JTextField();
        numeroReq = new javax.swing.JTextField();
        fornecedor = new javax.swing.JTextField();
        autorizador = new javax.swing.JTextField();
        dataAbertura = new javax.swing.JTextField();
        percatend = new javax.swing.JTextField();
        centroDoCusto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        dataFec = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        Primeiro = new javax.swing.JMenu();
        Anterior = new javax.swing.JMenu();
        MenuProximo = new javax.swing.JMenu();
        Ultima = new javax.swing.JMenu();
        Gravar = new javax.swing.JMenu();
        Novo = new javax.swing.JMenu();
        configuracao = new javax.swing.JMenu();
        jMenu12 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Requisicao de Compras");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(new ImageIcon(getClass().getResource("/br/com/req/images/logo.png")).getImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel4.setText("Data de abertura:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("%");

        situacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aberta", "Revisada", "Cancelada", "Fechada" }));

        jLabel12.setText("Requisicao:");

        jLabel7.setText("Atendida:");

        jLabel11.setText("Autorizador:");

        jLabel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setText("Solicitante:");

        jLabel3.setText("Centro de Custo:");

        nomeEstab.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Estabelecimento:");

        btnAutorizador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/req/images/m_icons8-magnifying-glass-tilted-left-48.png"))); // NOI18N
        btnAutorizador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutorizadorActionPerformed(evt);
            }
        });

        jLabel8.setText("Situacao:");

        Ccbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/req/images/m_icons8-magnifying-glass-tilted-left-48.png"))); // NOI18N

        lblAutoriazador.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnFornecedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/req/images/m_icons8-magnifying-glass-tilted-left-48.png"))); // NOI18N
        btnFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFornecedorActionPerformed(evt);
            }
        });

        lblItem.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel15.setText("Fornecedor:");

        jLabel17.setText("Responsavel Compra:");

        responsavelCompra.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C-Setor de compras", "S- Solicitante" }));
        responsavelCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                responsavelCompraActionPerformed(evt);
            }
        });

        jLabel18.setText("Finalidade:");

        finalidade.setColumns(20);
        finalidade.setRows(5);
        jScrollPane1.setViewportView(finalidade);

        jLabel19.setText("Item:");

        btnItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/req/images/m_icons8-magnifying-glass-tilted-left-48.png"))); // NOI18N
        btnItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnItemActionPerformed(evt);
            }
        });

        Item.setEditable(false);
        Item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemActionPerformed(evt);
            }
        });

        jLabel20.setText("Descricao Informada:");

        DescInformada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DescInformadaActionPerformed(evt);
            }
        });

        jLabel21.setText("Quantidade:");

        Quantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));

        jLabel22.setText("Unidade:");

        Unidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));

        jLabel23.setText("Valor unitario:");

        ValorUnitario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        ValorUnitario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValorUnitarioActionPerformed(evt);
            }
        });
        ValorUnitario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ValorUnitarioKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ValorUnitarioKeyReleased(evt);
            }
        });

        jLabel24.setText("Valor total:");

        jLabel25.setText("Codigo externo:");

        CodigoExterno.setEditable(false);
        CodigoExterno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));

        Complemento.setColumns(20);
        Complemento.setRows(5);
        jScrollPane2.setViewportView(Complemento);

        jLabel26.setText("Complemento:");

        estab.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "001", "002" }));
        estab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estabActionPerformed(evt);
            }
        });

        jButton3.setText("Incluir Item");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir Item");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnPesquisaReq.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/req/images/m_icons8-magnifying-glass-tilted-left-48.png"))); // NOI18N
        btnPesquisaReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaReqActionPerformed(evt);
            }
        });

        Lblsolicitante.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Solicitante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/req/images/m_icons8-magnifying-glass-tilted-left-48.png"))); // NOI18N
        Solicitante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SolicitanteActionPerformed(evt);
            }
        });

        lblFornecedor.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Status.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        TabelaItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Seq", "Codigo", "Descricao", "Complemento", "Quant", "Atendido", "Unidade", "Dono Registro", "Valor Unitario", "Valor Total", "Codigo Ext"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaItens.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaItensMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(TabelaItens);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1330, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ValorTotal.setEditable(false);
        ValorTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));

        solicitanteTxt.setEditable(false);
        solicitanteTxt.setBackground(new java.awt.Color(255, 204, 153));
        solicitanteTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solicitanteTxtActionPerformed(evt);
            }
        });

        numeroReq.setBackground(new java.awt.Color(255, 204, 153));

        fornecedor.setEditable(false);
        fornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fornecedorActionPerformed(evt);
            }
        });

        autorizador.setEditable(false);
        autorizador.setBackground(new java.awt.Color(255, 204, 153));
        autorizador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autorizadorActionPerformed(evt);
            }
        });

        dataAbertura.setEditable(false);
        dataAbertura.setBackground(new java.awt.Color(255, 204, 153));
        dataAbertura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataAberturaActionPerformed(evt);
            }
        });

        percatend.setEditable(false);

        centroDoCusto.setEditable(false);
        centroDoCusto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                centroDoCustoActionPerformed(evt);
            }
        });

        jLabel2.setText("Data Fechamento:");

        dataFec.setEditable(false);

        javax.swing.GroupLayout TelareqLayout = new javax.swing.GroupLayout(Telareq);
        Telareq.setLayout(TelareqLayout);
        TelareqLayout.setHorizontalGroup(
            TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TelareqLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TelareqLayout.createSequentialGroup()
                        .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(TelareqLayout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel12)
                                        .addComponent(jLabel7)))
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGroup(TelareqLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel15)
                                        .addComponent(jLabel11))
                                    .addComponent(jLabel3))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(TelareqLayout.createSequentialGroup()
                                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(solicitanteTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                    .addComponent(fornecedor)
                                    .addComponent(autorizador)
                                    .addComponent(centroDoCusto))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TelareqLayout.createSequentialGroup()
                                        .addComponent(Solicitante, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Lblsolicitante, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(182, 182, 182)
                                        .addComponent(jLabel8))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TelareqLayout.createSequentialGroup()
                                        .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(TelareqLayout.createSequentialGroup()
                                                .addComponent(btnFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lblFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(TelareqLayout.createSequentialGroup()
                                                .addComponent(Ccbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(TelareqLayout.createSequentialGroup()
                                                .addComponent(btnAutorizador, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lblAutoriazador, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel2))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(dataAbertura, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(situacao, javax.swing.GroupLayout.Alignment.LEADING, 0, 93, Short.MAX_VALUE))
                                    .addComponent(dataFec, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(TelareqLayout.createSequentialGroup()
                                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(numeroReq, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                                    .addComponent(percatend))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TelareqLayout.createSequentialGroup()
                                        .addComponent(btnPesquisaReq, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(221, 221, 221))))
                            .addGroup(TelareqLayout.createSequentialGroup()
                                .addComponent(estab, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nomeEstab, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(202, 202, 202)
                                .addComponent(Status, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(TelareqLayout.createSequentialGroup()
                        .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel19)
                            .addComponent(jLabel21)
                            .addComponent(jLabel23)
                            .addComponent(jLabel22)
                            .addComponent(jLabel24)
                            .addComponent(jLabel26))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(TelareqLayout.createSequentialGroup()
                                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(TelareqLayout.createSequentialGroup()
                                        .addComponent(Item, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnItem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(DescInformada, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(TelareqLayout.createSequentialGroup()
                                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Quantidade, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                                    .addComponent(ValorUnitario, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Unidade, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ValorTotal))
                                .addGap(68, 68, 68)
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CodigoExterno, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(TelareqLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(responsavelCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(TelareqLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(101, Short.MAX_VALUE))
            .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(TelareqLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1363, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        TelareqLayout.setVerticalGroup(
            TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TelareqLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nomeEstab, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(estab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Status, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TelareqLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(percatend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(numeroReq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TelareqLayout.createSequentialGroup()
                            .addComponent(btnPesquisaReq, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(4, 4, 4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Solicitante, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Lblsolicitante, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(situacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(solicitanteTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addGap(0, 6, Short.MAX_VALUE)
                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblFornecedor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFornecedor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(fornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(TelareqLayout.createSequentialGroup()
                        .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(autorizador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAutorizador, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAutoriazador, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(dataAbertura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(centroDoCusto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Ccbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6)
                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(responsavelCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(dataFec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addGroup(TelareqLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel19)
                                .addComponent(Item, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnItem)
                            .addComponent(lblItem, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(DescInformada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TelareqLayout.createSequentialGroup()
                        .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ValorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Unidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel25)
                                .addComponent(CodigoExterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(ValorTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TelareqLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel26))
                    .addGroup(TelareqLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(71, Short.MAX_VALUE))
            .addGroup(TelareqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(TelareqLayout.createSequentialGroup()
                    .addContainerGap(647, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        Primeiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/req/images/primeira.png"))); // NOI18N
        Primeiro.setText("Primeiro");
        Primeiro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PrimeiroMouseClicked(evt);
            }
        });
        jMenuBar1.add(Primeiro);

        Anterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/req/images/anterior.png"))); // NOI18N
        Anterior.setText("Anterior");
        Anterior.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AnteriorMouseClicked(evt);
            }
        });
        jMenuBar1.add(Anterior);

        MenuProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/req/images/proximo.png"))); // NOI18N
        MenuProximo.setText("Proximo");
        MenuProximo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuProximoMouseClicked(evt);
            }
        });
        MenuProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuProximoActionPerformed(evt);
            }
        });
        jMenuBar1.add(MenuProximo);

        Ultima.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/req/images/ultima.png"))); // NOI18N
        Ultima.setText("Ultimo");
        Ultima.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UltimaMouseClicked(evt);
            }
        });
        jMenuBar1.add(Ultima);

        Gravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/req/images/salvar.png"))); // NOI18N
        Gravar.setText("Gravar");
        Gravar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GravarMouseClicked(evt);
            }
        });
        Gravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GravarActionPerformed(evt);
            }
        });
        jMenuBar1.add(Gravar);

        Novo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/req/images/nova.png"))); // NOI18N
        Novo.setText("Novo");
        Novo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NovoMouseClicked(evt);
            }
        });
        Novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NovoActionPerformed(evt);
            }
        });
        jMenuBar1.add(Novo);

        configuracao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/req/images/configTop.png"))); // NOI18N
        configuracao.setText("Config");
        configuracao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                configuracaoMouseClicked(evt);
            }
        });
        jMenuBar1.add(configuracao);

        jMenu12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/req/images/sair.png"))); // NOI18N
        jMenu12.setText("Sair");
        jMenu12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu12MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu12);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Telareq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Telareq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnItemActionPerformed
        // TODO add your handling code here:

        new Itens().setVisible(true);
    }//GEN-LAST:event_btnItemActionPerformed

    private void ItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemActionPerformed

    private void DescInformadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DescInformadaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DescInformadaActionPerformed

    private void LancarNaTabelaItens() {
        dados = (DefaultTableModel) TabelaItens.getModel();
        dados.setNumRows(0);

        RequisicaoItem obj = new RequisicaoItem();

        count = count + 1;
        obj.setSeq(count);
        obj.setItem(Integer.parseInt(Item.getText()));
        obj.setDescInformada(DescInformada.getText());
        obj.setComplemento(Complemento.getText());
        obj.setQuantidade(Integer.parseInt(Quantidade.getText()));
        obj.setAtendido("F");
        obj.setUnidade(Unidade.getText());
        obj.setDonoRegistro(0);
        obj.setValorUnitario(Double.parseDouble(ValorUnitario.getText().replace(',', '.')));
        obj.setValorTotal(Double.parseDouble(ValorTotal.getText().replace(',', '.')));
        obj.setCodigoExt(CodigoExterno.getText());
        listaSdb.add(obj);

        /*if(numeroReq.getText().trim().isEmpty()){
    
    JOptionPane.showMessageDialog(null, "Por favor, clique no botão novo\n Para iniciar uma nova requisição");
    
    }else{}*/
        for (RequisicaoItem c : listaSdb) {
            dados.addRow(new Object[]{
                c.getSeq(),
                c.getItem(),
                c.getDescInformada(),
                c.getComplemento(),
                c.getQuantidade(),
                c.getAtendido(),
                c.getUnidade(),
                c.getDonoRegistro(),
                c.getValorUnitario(),
                c.getValorTotal(),
                c.getCodigoExt()

            });

        }

    }


    private void MenuProximoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuProximoMouseClicked
        // TODO add your handling code here:
       
        limparBuscaItens();

        new Utilitarios().LimpaTela(Telareq);
         estab.setEnabled(true);
        //numeroReq.setEnabled(true);
        btnPesquisaReq.setEnabled(true);

        Requisicao obj = new Requisicao();
        if (req3.hasNext()) {
            obj = (Requisicao) req3.next();
            if (obj.getEstab() == 1) {
                estab.setSelectedItem("001");
                nomeEstab.setText("Santa Cruz do Sul");
            } else {
                estab.setSelectedItem("002");
                nomeEstab.setText("Pardinho");

            }

            numeroReq.setText(String.valueOf(obj.getNumero()));
            switch (obj.getSituacao()) {
                case "A":
                    situacao.setSelectedItem("Aberta");

                    break;
                case "R":
                    situacao.setSelectedItem("Revisada");

                    break;
                case "C":
                    situacao.setSelectedItem("Cancelada");

                    break;
                case "F":
                    situacao.setSelectedItem("Fechada");

                    break;

            }

            if (obj.getAutorizado().equals("G")) {

                Status.setText("Aguardando Autorização");

            } else {

                Status.setText("Autorizada");

            }

            dataAbertura.setText(obj.getDataabert());
            dataFec.setText(obj.getDatafec());
            solicitanteTxt.setText(String.valueOf(obj.getSolicitante()));
            fornecedor.setText(String.valueOf(obj.getFornecedor()));
            autorizador.setText(String.valueOf(obj.getAutorizador()));

            String nomeSolicitante = new FuncionarioDao().FuncionariosPorNumero(obj.getSolicitante());
            Lblsolicitante.setText(nomeSolicitante);

            String nomeFornecedor = new FuncionarioDao().FornecedoresPorNumero(obj.getFornecedor());
            lblFornecedor.setText(nomeFornecedor);

            String nomeAutorizador = new FuncionarioDao().AutorizadorPorNumero(obj.getAutorizador());
            lblAutoriazador.setText(nomeAutorizador);

            centroDoCusto.setText(String.valueOf(obj.getCcusto()));

            switch (obj.getRespCompra()) {
                case "C":
                    responsavelCompra.setSelectedItem("C-Setor de compras");
                    break;
                case "S":
                    responsavelCompra.setSelectedItem("S- Solicitante");
                    break;
            }
            List<RequisicaoItem> lista = new ReqDAO().consultarItemReq(obj.getNumero());
            DefaultTableModel dados = (DefaultTableModel) TabelaItens.getModel();
            dados.setNumRows(0);

            for (RequisicaoItem c : lista) {

                dados.addRow(new Object[]{
                    c.getSeq(),
                    c.getItem(),
                    c.getDescInformada(),
                    c.getComplemento(),
                    c.getQuantidade(),
                    c.getAtendido(),
                    c.getUnidade(),
                    c.getDonoRegistro(),
                    c.getValorUnitario(),
                    c.getValorTotal(),
                    c.getCodigoExt()

                });
            }

        }

    }//GEN-LAST:event_MenuProximoMouseClicked

    private void SolicitanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SolicitanteActionPerformed
        // TODO add your handling code here:

        new ReqFuncionarios().setVisible(true);

    }//GEN-LAST:event_SolicitanteActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        solicitanteTxt.setText(Fsolicitante);
        Lblsolicitante.setText(Fnome);
       
         if (estab.getSelectedItem().toString().equals("001")) {

            nomeEstab.setText("Santa Cruz do Sul");
            

        } else {

            nomeEstab.setText("Pardinho");
            

        }
        
        
        


    }//GEN-LAST:event_formWindowActivated

    private void btnFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFornecedorActionPerformed

        new ReqFornecedores().setVisible(true);

    }//GEN-LAST:event_btnFornecedorActionPerformed

    private void btnAutorizadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutorizadorActionPerformed
        // TODO add your handling code here:
        new ReqAutorizador().setVisible(true);


    }//GEN-LAST:event_btnAutorizadorActionPerformed

    private void TabelaItensMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaItensMouseClicked
        // TODO add your handling code here:
        Item.setEnabled(false);
        DescInformada.setEnabled(false);
        Complemento.setEnabled(false);
        Quantidade.setEnabled(false);
        Unidade.setEnabled(false);
        ValorUnitario.setEnabled(false);
        ValorTotal.setEnabled(false);
        CodigoExterno.setEnabled(false);

        Item.setText(TabelaItens.getValueAt(TabelaItens.getSelectedRow(), 1).toString());
        DescInformada.setText(TabelaItens.getValueAt(TabelaItens.getSelectedRow(), 2).toString());
        Complemento.setText(TabelaItens.getValueAt(TabelaItens.getSelectedRow(), 3).toString());
        Quantidade.setText(TabelaItens.getValueAt(TabelaItens.getSelectedRow(), 4).toString());
        Unidade.setText(TabelaItens.getValueAt(TabelaItens.getSelectedRow(), 6).toString());
        ValorUnitario.setText(TabelaItens.getValueAt(TabelaItens.getSelectedRow(), 9).toString().replace('.', ','));
        ValorTotal.setText(TabelaItens.getValueAt(TabelaItens.getSelectedRow(), 9).toString().replace('.', ','));
        CodigoExterno.setText(TabelaItens.getValueAt(TabelaItens.getSelectedRow(), 11).toString());


    }//GEN-LAST:event_TabelaItensMouseClicked

    private void estabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estabActionPerformed
        // TODO add your handling code here:
        if (estab.getSelectedItem().toString().equals("001")) {

            nomeEstab.setText("Santa Cruz do Sul");
            req3 = req1;
           

        } else {

            nomeEstab.setText("Pardinho");
            req3 = req2;
          

        }


    }//GEN-LAST:event_estabActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            if (!Item.isEnabled()) {
                Item.setEnabled(true);
                DescInformada.setEnabled(true);
                Complemento.setEnabled(true);
                Quantidade.setEnabled(true);
                Unidade.setEnabled(true);
                ValorUnitario.setEnabled(true);
                ValorTotal.setEnabled(true);
                CodigoExterno.setEnabled(true);
                Item.setText(null);
                DescInformada.setText(null);
                Complemento.setText(null);
                Quantidade.setText(null);
                Unidade.setText(null);
                ValorUnitario.setText(null);
                ValorTotal.setText(null);
                CodigoExterno.setText(null);
                lblItem.setText(null);

            } else if (solicitanteTxt.getText().trim().isEmpty() || numeroReq.getText().trim().isEmpty()) {

                JOptionPane.showMessageDialog(null, "Por favor clique no botao Novo\n"
                        + "Para iniciar uma nova requisicao ou informe"
                        + "o nome do Solicitante");
                Item.setText(null);
                DescInformada.setText(null);
                Complemento.setText(null);
                Quantidade.setText(null);
                Unidade.setText(null);
                ValorUnitario.setText(null);
                ValorTotal.setText(null);
                CodigoExterno.setText(null);
                lblItem.setText(null);

            } else {

                LancarNaTabelaItens();
                Item.setText(null);
                DescInformada.setText(null);
                Complemento.setText(null);
                Quantidade.setText(null);
                Unidade.setText(null);
                ValorUnitario.setText(null);
                ValorTotal.setText(null);
                CodigoExterno.setText(null);
                lblItem.setText(null);

            }

        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Erro " + e);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void ValorUnitarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ValorUnitarioKeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            if (!ValorUnitario.getText().trim().isEmpty() && !Quantidade.getText().trim().isEmpty()) {
                Double y = Double.parseDouble(ValorUnitario.getText().replace(',', '.'));
                Double w = Double.parseDouble(Quantidade.getText());
                Double x = y * w;
                String unit = String.valueOf(y).replace('.', ',');
                // System.out.println(formatter.format("" + x));

                ValorTotal.setText("" + String.valueOf(x).replace('.', ','));
                ValorUnitario.setText(unit);
                //JOptionPane.showMessageDialog(null, "Número " + x);
            }
        }
    }//GEN-LAST:event_ValorUnitarioKeyPressed

    private void ValorUnitarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValorUnitarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ValorUnitarioActionPerformed

    private void solicitanteTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solicitanteTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_solicitanteTxtActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        int x = Integer.parseInt(TabelaItens.getValueAt(TabelaItens.getSelectedRow(), 0).toString());
        int y = x - 1;
        dados = (DefaultTableModel) TabelaItens.getModel();
        dados.removeRow(TabelaItens.getSelectedRow());
        listaSdb.remove(y);
        Item.setEnabled(true);
        DescInformada.setEnabled(true);
        Complemento.setEnabled(true);
        Quantidade.setEnabled(true);
        Unidade.setEnabled(true);
        ValorUnitario.setEnabled(true);
        ValorTotal.setEnabled(true);
        CodigoExterno.setEnabled(true);
        Item.setText(null);
        DescInformada.setText(null);
        Complemento.setText(null);
        Quantidade.setText(null);
        Unidade.setText(null);
        ValorUnitario.setText(null);
        ValorTotal.setText(null);
        CodigoExterno.setText(null);
        lblItem.setText(null);


    }//GEN-LAST:event_btnExcluirActionPerformed

    private void responsavelCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_responsavelCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_responsavelCompraActionPerformed

    private void fornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fornecedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fornecedorActionPerformed

    private void autorizadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autorizadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_autorizadorActionPerformed

    private void dataAberturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataAberturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataAberturaActionPerformed

    private void centroDoCustoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_centroDoCustoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_centroDoCustoActionPerformed

    private void btnPesquisaReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaReqActionPerformed
        // TODO add your handling code here:
        new Utilitarios().limpaTabela();
        new Utilitarios().LimpaTela(Telareq);
        limparBuscaItens();
        numeroReq.setEnabled(true);
        btnPesquisaReq.setEnabled(true);
        estab.setEnabled(true);
        int p;
        if (estab.getSelectedItem().equals("001")) {

            p = 1;

        } else {
            p = 2;
        }
        Requisicao obj = new ReqDAO().ConsultarRequisicao(Integer.parseInt(numeroReq.getText()), p);
        if (obj.getEstab() == 1) {
            estab.setSelectedItem("001");
            nomeEstab.setText("Santa Cruz do Sul");
        } else if (obj.getEstab() == 2) {
            estab.setSelectedItem("002");
            nomeEstab.setText("Pardinho");

        }

        numeroReq.setText(String.valueOf(obj.getNumero()));
        switch (obj.getSituacao()) {
            case "A":
                situacao.setSelectedItem("Aberta");

                break;
            case "R":
                situacao.setSelectedItem("Revisada");

                break;
            case "C":
                situacao.setSelectedItem("Cancelada");

                break;
            case "F":
                situacao.setSelectedItem("Fechada");

                break;

        }

        if (obj.getAutorizado().equals("G")) {

            Status.setText("Aguardando Autorização");

        } else {

            Status.setText("Autorizada");

        }

        dataAbertura.setText(obj.getDataabert());
        dataFec.setText(obj.getDatafec());
        solicitanteTxt.setText(String.valueOf(obj.getSolicitante()));
        fornecedor.setText(String.valueOf(obj.getFornecedor()));
        autorizador.setText(String.valueOf(obj.getAutorizador()));

        String nomeSolicitante = new FuncionarioDao().FuncionariosPorNumero(obj.getSolicitante());
        Lblsolicitante.setText(nomeSolicitante);

        String nomeFornecedor = new FuncionarioDao().FornecedoresPorNumero(obj.getFornecedor());
        lblFornecedor.setText(nomeFornecedor);

        String nomeAutorizador = new FuncionarioDao().AutorizadorPorNumero(obj.getAutorizador());
        lblAutoriazador.setText(nomeAutorizador);

        centroDoCusto.setText(String.valueOf(obj.getCcusto()));

        switch (obj.getRespCompra()) {
            case "C":
                responsavelCompra.setSelectedItem("C-Setor de compras");
                break;
            case "S":
                responsavelCompra.setSelectedItem("S- Solicitante");
                break;
        }
        List<RequisicaoItem> lista = new ReqDAO().consultarItemReq(obj.getNumero());
        DefaultTableModel dados = (DefaultTableModel) TabelaItens.getModel();
        dados.setNumRows(0);

        for (RequisicaoItem c : lista) {

            dados.addRow(new Object[]{
                c.getSeq(),
                c.getItem(),
                c.getDescInformada(),
                c.getComplemento(),
                c.getQuantidade(),
                c.getAtendido(),
                c.getUnidade(),
                c.getDonoRegistro(),
                c.getValorUnitario(),
                c.getValorTotal(),
                c.getCodigoExt()

            });
        }
    }//GEN-LAST:event_btnPesquisaReqActionPerformed

    private void GravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GravarActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_GravarActionPerformed

    private void GravarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GravarMouseClicked
        // TODO add your handling code here:
        if (solicitanteTxt.isEnabled()) {

            if (numeroReq.getText().trim().isEmpty() || solicitanteTxt.getText().trim().isEmpty() || autorizador.getText().trim().isEmpty()) {

                JOptionPane.showMessageDialog(null, "Por favor, preencha os campos!");

            } else {

                ReqDAO dao = new ReqDAO();
                int k;

                if (estab.getSelectedItem().equals("001")) {
                    k = 1;
                    Requisicao obj = new ReqDAO().consultarUltimoIdRequisicao(1);
                    new ReqDAO().cadastrarInipublico(String.valueOf(obj.getNumero()), "" + dataDeInscricao, 1);

                } else {
                    k = 2;
                    Requisicao obj = new ReqDAO().consultarUltimoIdRequisicao(2);
                    new ReqDAO().cadastrarInipublico(String.valueOf(obj.getNumero()), "" + dataDeInscricao, 2);

                }

                dao.cadastrarReqItens(listaSdb, k, Integer.parseInt(numeroReq.getText()));

                Requisicao obj = new Requisicao();

                obj.setEstab(k);

                obj.setDataabert(dataAbertura.getText());
                obj.setDatafec(null);
                obj.setSituacao("A");
                obj.setObservacao(finalidade.getText());
                obj.setSolicitante(Integer.parseInt(solicitanteTxt.getText()));
                obj.setAutorizador(Integer.parseInt(autorizador.getText()));
                obj.setCcusto(0);
                obj.setPercatend(0);
                obj.setDonoRegistro(0);
                obj.setAutorizado("G");
                obj.setValorTotal(0);
                obj.setNumreqest(0);
                if (fornecedor.getText().equals(null)) {

                    obj.setFornecedor(0);

                }

                obj.setEstabReqest(0);
                obj.setEstaboc(0);
                obj.setNumerooc(0);

                if (responsavelCompra.getSelectedItem().equals("C-Setor de compras")) {

                    obj.setRespCompra("C");

                } else {

                    obj.setRespCompra("S");

                }

                obj.setPrazoCompra(null);
                obj.setNumero(Integer.parseInt(numeroReq.getText()));
                new ReqDAO().cadastrarRequisicao(obj);

            }

        } else {

            JOptionPane.showMessageDialog(null, "Clique em novo para gravar uma nova requisicao");

        }


    }//GEN-LAST:event_GravarMouseClicked

    private void NovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NovoActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_NovoActionPerformed

    private void NovoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NovoMouseClicked
        // TODO add your handling code here:
        limparBuscaItens();
        new Utilitarios().LimpaTela2(Telareq);
        if (estab.getSelectedItem().equals("001")) {

            Requisicao obj = new ReqDAO().consultarUltimoIdRequisicao(1);
            numeroReq.setText(String.valueOf(obj.getNumero()));
            dataAbertura.setText("" + dataDeInscricao);
            new ReqDAO().cadastrarInipublico(String.valueOf(obj.getNumero()), "" + dataDeInscricao, 1);

        } else {

            Requisicao obj = new ReqDAO().consultarUltimoIdRequisicao(2);
            numeroReq.setText(String.valueOf(obj.getNumero()));
            dataAbertura.setText("" + dataDeInscricao);
            new ReqDAO().cadastrarInipublico(String.valueOf(obj.getNumero()), "" + dataDeInscricao, 2);

        }

    }//GEN-LAST:event_NovoMouseClicked

    private void UltimaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UltimaMouseClicked
        // TODO add your handling code here:
        limparBuscaItens();
        new Utilitarios().LimpaTela(Telareq);
         estab.setEnabled(true);
        int m;
        if (estab.getSelectedItem().toString().equals("001")) {

            m = 1;

        } else {

            m = 2;

        }

        Requisicao obj = new ReqDAO().ultimaReq(m);

        if (obj.getEstab() == 1) {
            estab.setSelectedItem("001");
            nomeEstab.setText("Santa Cruz do Sul");
        } else {
            estab.setSelectedItem("002");
            nomeEstab.setText("Pardinho");

        }

        numeroReq.setText(String.valueOf(obj.getNumero()));
        switch (obj.getSituacao()) {
            case "A":
                situacao.setSelectedItem("Aberta");

                break;
            case "R":
                situacao.setSelectedItem("Revisada");

                break;
            case "C":
                situacao.setSelectedItem("Cancelada");

                break;
            case "F":
                situacao.setSelectedItem("Fechada");

                break;

        }

        if (obj.getAutorizado().equals("G")) {

            Status.setText("Aguardando Autorização");

        } else {

            Status.setText("Autorizada");

        }

        dataAbertura.setText(obj.getDataabert());
        dataFec.setText(obj.getDatafec());
        solicitanteTxt.setText(String.valueOf(obj.getSolicitante()));
        fornecedor.setText(String.valueOf(obj.getFornecedor()));
        autorizador.setText(String.valueOf(obj.getAutorizador()));

        String nomeSolicitante = new FuncionarioDao().FuncionariosPorNumero(obj.getSolicitante());
        Lblsolicitante.setText(nomeSolicitante);

        String nomeFornecedor = new FuncionarioDao().FornecedoresPorNumero(obj.getFornecedor());
        lblFornecedor.setText(nomeFornecedor);

        String nomeAutorizador = new FuncionarioDao().AutorizadorPorNumero(obj.getAutorizador());
        lblAutoriazador.setText(nomeAutorizador);

        centroDoCusto.setText(String.valueOf(obj.getCcusto()));

        switch (obj.getRespCompra()) {
            case "C":
                responsavelCompra.setSelectedItem("C-Setor de compras");
                break;
            case "S":
                responsavelCompra.setSelectedItem("S- Solicitante");
                break;
        }
        List<RequisicaoItem> lista = new ReqDAO().consultarItemReq(obj.getNumero());
        dados = (DefaultTableModel) TabelaItens.getModel();
        dados.setNumRows(0);

        for (RequisicaoItem c : lista) {

            dados.addRow(new Object[]{
                c.getSeq(),
                c.getItem(),
                c.getDescInformada(),
                c.getComplemento(),
                c.getQuantidade(),
                c.getAtendido(),
                c.getUnidade(),
                c.getDonoRegistro(),
                c.getValorUnitario(),
                c.getValorTotal(),
                c.getCodigoExt()

            });
        }

    }//GEN-LAST:event_UltimaMouseClicked

    private void AnteriorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnteriorMouseClicked
        // TODO add your handling code here:
        limparBuscaItens();
         new Utilitarios().LimpaTela(Telareq);
         estab.setEnabled(true);
        Requisicao obj = new Requisicao();
        if (req3.hasPrevious()) {
            obj = (Requisicao) req3.previous();
            if (obj.getEstab() == 1) {
                estab.setSelectedItem("001");
                nomeEstab.setText("Santa Cruz do Sul");
            } else {
                estab.setSelectedItem("002");
                nomeEstab.setText("Pardinho");

            }

            numeroReq.setText(String.valueOf(obj.getNumero()));
            switch (obj.getSituacao()) {
                case "A":
                    situacao.setSelectedItem("Aberta");

                    break;
                case "R":
                    situacao.setSelectedItem("Revisada");

                    break;
                case "C":
                    situacao.setSelectedItem("Cancelada");

                    break;
                case "F":
                    situacao.setSelectedItem("Fechada");

                    break;

            }

            if (obj.getAutorizado().equals("G")) {

                Status.setText("Aguardando Autorização");

            } else {

                Status.setText("Autorizada");

            }

            dataAbertura.setText(obj.getDataabert());
            dataFec.setText(obj.getDatafec());
            solicitanteTxt.setText(String.valueOf(obj.getSolicitante()));
            fornecedor.setText(String.valueOf(obj.getFornecedor()));
            autorizador.setText(String.valueOf(obj.getAutorizador()));

            String nomeSolicitante = new FuncionarioDao().FuncionariosPorNumero(obj.getSolicitante());
            Lblsolicitante.setText(nomeSolicitante);

            String nomeFornecedor = new FuncionarioDao().FornecedoresPorNumero(obj.getFornecedor());
            lblFornecedor.setText(nomeFornecedor);

            String nomeAutorizador = new FuncionarioDao().AutorizadorPorNumero(obj.getAutorizador());
            lblAutoriazador.setText(nomeAutorizador);

            centroDoCusto.setText(String.valueOf(obj.getCcusto()));

            switch (obj.getRespCompra()) {
                case "C":
                    responsavelCompra.setSelectedItem("C-Setor de compras");
                    break;
                case "S":
                    responsavelCompra.setSelectedItem("S- Solicitante");
                    break;
            }
            List<RequisicaoItem> lista = new ReqDAO().consultarItemReq(obj.getNumero());
            DefaultTableModel dados = (DefaultTableModel) TabelaItens.getModel();
            dados.setNumRows(0);

            for (RequisicaoItem c : lista) {

                dados.addRow(new Object[]{
                    c.getSeq(),
                    c.getItem(),
                    c.getDescInformada(),
                    c.getComplemento(),
                    c.getQuantidade(),
                    c.getAtendido(),
                    c.getUnidade(),
                    c.getDonoRegistro(),
                    c.getValorUnitario(),
                    c.getValorTotal(),
                    c.getCodigoExt()

                });
            }

        }

    }//GEN-LAST:event_AnteriorMouseClicked

    private void PrimeiroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrimeiroMouseClicked
        // TODO add your handling code here:
        int t;
        limparBuscaItens();
        new Utilitarios().LimpaTela(Telareq);
         estab.setEnabled(true);
         if(estab.getSelectedItem().toString().equals("001")){
         
             t = 1;
         
         }else{
         
             t = 2;
         
         }
        Requisicao obj = new ReqDAO().primeiraReq(t);

        if (obj.getEstab() == 1) {
            estab.setSelectedItem("001");
            nomeEstab.setText("Santa Cruz do Sul");
        } else {
            estab.setSelectedItem("002");
            nomeEstab.setText("Pardinho");

        }

        numeroReq.setText(String.valueOf(obj.getNumero()));
        switch (obj.getSituacao()) {
            case "A":
                situacao.setSelectedItem("Aberta");

                break;
            case "R":
                situacao.setSelectedItem("Revisada");

                break;
            case "C":
                situacao.setSelectedItem("Cancelada");

                break;
            case "F":
                situacao.setSelectedItem("Fechada");

                break;

        }

        if (obj.getAutorizado().equals("G")) {

            Status.setText("Aguardando Autorização");

        } else {

            Status.setText("Autorizada");

        }

        dataAbertura.setText(obj.getDataabert());
        dataFec.setText(obj.getDatafec());
        solicitanteTxt.setText(String.valueOf(obj.getSolicitante()));
        fornecedor.setText(String.valueOf(obj.getFornecedor()));
        autorizador.setText(String.valueOf(obj.getAutorizador()));

        String nomeSolicitante = new FuncionarioDao().FuncionariosPorNumero(obj.getSolicitante());
        Lblsolicitante.setText(nomeSolicitante);

        String nomeFornecedor = new FuncionarioDao().FornecedoresPorNumero(obj.getFornecedor());
        lblFornecedor.setText(nomeFornecedor);

        String nomeAutorizador = new FuncionarioDao().AutorizadorPorNumero(obj.getAutorizador());
        lblAutoriazador.setText(nomeAutorizador);

        centroDoCusto.setText(String.valueOf(obj.getCcusto()));

        switch (obj.getRespCompra()) {
            case "C":
                responsavelCompra.setSelectedItem("C-Setor de compras");
                break;
            case "S":
                responsavelCompra.setSelectedItem("S- Solicitante");
                break;
        }
        List<RequisicaoItem> lista = new ReqDAO().consultarItemReq(obj.getNumero());
        DefaultTableModel dados = (DefaultTableModel) TabelaItens.getModel();
        dados.setNumRows(0);

        for (RequisicaoItem c : lista) {

            dados.addRow(new Object[]{
                c.getSeq(),
                c.getItem(),
                c.getDescInformada(),
                c.getComplemento(),
                c.getQuantidade(),
                c.getAtendido(),
                c.getUnidade(),
                c.getDonoRegistro(),
                c.getValorUnitario(),
                c.getValorTotal(),
                c.getCodigoExt()

            });
        }

        /*obj.setEstab(rs.getInt("estab"));
        obj.setDataabert(rs.getString("dataabert"));
        obj.setDatafec(rs.getString("datafec"));
        obj.setSituacao(rs.getString("situacao"));
        obj.setObservacao(rs.getString("observacao"));
        obj.setSolicitante(rs.getInt("solicitante"));
        obj.setAutorizador(rs.getInt("autorizador"));
        obj.setPercatend(rs.getDouble("percatend"));
        obj.setDonoRegistro(rs.getInt("donoregistro"));
        obj.setAutorizado(rs.getString("autorizado"));
        obj.setValorToral(rs.getDouble("valortotal"));
        obj.setNumreqest(rs.getInt("nunreqest"));
        obj.setFornecedor(rs.getInt("fornecedor"));
        obj.setEstabReqest(rs.getInt("estabreqest"));
        obj.setEstaboc(rs.getInt("estaboc"));
        obj.setNumerooc(rs.getInt("numerooc"));
        obj.setRespCompra(rs.getString("respcompra"));
        obj.setPrazoCompra(rs.getString("prazocompra"));
        obj.setNumero(rs.getInt("numero"));*/
    }//GEN-LAST:event_PrimeiroMouseClicked

    private void jMenu12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu12MouseClicked
        // TODO add your handling code here:
        exit(0);
    }//GEN-LAST:event_jMenu12MouseClicked

    private void MenuProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuProximoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MenuProximoActionPerformed

    private void configuracaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configuracaoMouseClicked
        try {
            // TODO add your handling code here:

            new Config().setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(ReqCompras.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_configuracaoMouseClicked

    private void ValorUnitarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ValorUnitarioKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ValorUnitarioKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

 /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReqCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReqCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReqCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReqCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReqCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReqCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReqCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReqCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {

                    x = new ReqCompras();
                    x.setVisible(true);

                } catch (Exception e) {

                    try {
                        //JOptionPane.showMessageDialog(null, "Conecte na vpn ou rede local para ter acesso ao sistema");
                        new Config().setVisible(true);
                        certo = false;
                    } catch (SQLException ex) {
                        Logger.getLogger(ReqCompras.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JMenu Anterior;
    public javax.swing.JButton Ccbtn;
    public javax.swing.JFormattedTextField CodigoExterno;
    public javax.swing.JTextArea Complemento;
    public javax.swing.JTextField DescInformada;
    public javax.swing.JMenu Gravar;
    public javax.swing.JTextField Item;
    public javax.swing.JLabel Lblsolicitante;
    public javax.swing.JMenu MenuProximo;
    public javax.swing.JMenu Novo;
    public javax.swing.JMenu Primeiro;
    public javax.swing.JFormattedTextField Quantidade;
    public javax.swing.JButton Solicitante;
    public javax.swing.JLabel Status;
    public javax.swing.JTable TabelaItens;
    public javax.swing.JPanel Telareq;
    public javax.swing.JMenu Ultima;
    public javax.swing.JFormattedTextField Unidade;
    public javax.swing.JFormattedTextField ValorTotal;
    public javax.swing.JFormattedTextField ValorUnitario;
    public javax.swing.JTextField autorizador;
    public javax.swing.JButton btnAutorizador;
    public javax.swing.JButton btnExcluir;
    public javax.swing.JButton btnFornecedor;
    public javax.swing.JButton btnItem;
    public javax.swing.JButton btnPesquisaReq;
    public javax.swing.JTextField centroDoCusto;
    public javax.swing.JMenu configuracao;
    public javax.swing.JTextField dataAbertura;
    public javax.swing.JTextField dataFec;
    public javax.swing.JComboBox<String> estab;
    public javax.swing.JTextArea finalidade;
    public javax.swing.JTextField fornecedor;
    public javax.swing.JButton jButton3;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel11;
    public javax.swing.JLabel jLabel12;
    public javax.swing.JLabel jLabel15;
    public javax.swing.JLabel jLabel17;
    public javax.swing.JLabel jLabel18;
    public javax.swing.JLabel jLabel19;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel20;
    public javax.swing.JLabel jLabel21;
    public javax.swing.JLabel jLabel22;
    public javax.swing.JLabel jLabel23;
    public javax.swing.JLabel jLabel24;
    public javax.swing.JLabel jLabel25;
    public javax.swing.JLabel jLabel26;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JLabel jLabel8;
    public javax.swing.JLabel jLabel9;
    public javax.swing.JMenu jMenu12;
    public javax.swing.JMenuBar jMenuBar1;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JTabbedPane jTabbedPane1;
    public javax.swing.JLabel lblAutoriazador;
    public javax.swing.JLabel lblFornecedor;
    public javax.swing.JLabel lblItem;
    public javax.swing.JLabel nomeEstab;
    public javax.swing.JTextField numeroReq;
    public javax.swing.JTextField percatend;
    public javax.swing.JComboBox<String> responsavelCompra;
    public javax.swing.JComboBox<String> situacao;
    public javax.swing.JTextField solicitanteTxt;
    // End of variables declaration//GEN-END:variables
}
